# -*- coding: utf-8 -*-
"""movies_streamlit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vkx4s-cgNzryzI32RRZ9BQ9_0y_D3x0R
"""

import pandas as pd

movies= pd.read_csv('https://raw.githubusercontent.com/aslam7861/Software_development/main/ml-latest-small/movies.csv')
ratings = pd.read_csv('https://raw.githubusercontent.com/aslam7861/Software_development/main/ml-latest-small/ratings.csv')

movies.sample(3)

ratings.sample(3)

ratings.userId.nunique()

movies.movieId.nunique()

ratings.shape

users_items = pd.pivot_table(data=ratings, 
                                 values='rating', 
                                 index='userId', 
                                 columns='movieId')

users_items

users_items.fillna(0, inplace=True)
users_items.sample(3)

from sklearn.metrics.pairwise import cosine_similarity

user_similarities = pd.DataFrame(cosine_similarity(users_items),
                                 columns=users_items.index, 
                                 index=users_items.index)
user_similarities.head()

user_id=1
weights = (
    user_similarities.query("userId!=@user_id")[user_id] / sum(user_similarities.query("userId!=@user_id")[user_id])
          )
weights.head(6)

not_visited_movies = users_items.loc[users_items.index!=user_id, users_items.loc[user_id,:]==0]
not_visited_movies.T

weighted_averages = pd.DataFrame(not_visited_movies.T.dot(weights), columns=["predicted_rating"])
weighted_averages.head()

recommendation=weighted_averages.merge(movies, left_index=True, right_on="movieId")

recommendation.sort_values('predicted_rating', ascending=False).head(5)

